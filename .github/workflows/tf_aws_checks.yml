name: Run Terraform checks

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'terraform/*'
  pull_request:
    paths:
      - 'terraform/*'


jobs:
  tf_lint:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    timeout-minutes: 2
    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.3

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan > /tmp/plan.out
          cat /tmp/plan.out

      - name: UpdateCommit
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GH_TOKEN}}
          script: |
              const output = `#### Terraform Format and Style 🖌: \`${{ steps.fmt.outcome }}\`
              #### Terraform Initialization ⚙️: \`${{ steps.init.outcome }}\`
              #### Terraform Validation 🤖: \`${{ steps.validate.outcome }}\`
              #### Terraform Plan 📖: \`${{ steps.plan.outcome }}\`

              <details><summary>Show Plan</summary>

              \`\`\`\n
              ${{ steps.plan.outputs.plan_output }}
              \`\`\`

              </details>

              *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
